<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd"
       default-autowire="byName">

    <context:property-placeholder location="classpath:application.properties" />

    <bean id="userDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
          p:url="${datasource.activity.url}"
          p:username="${datasource.activity.username}"
          p:password="${datasource.activity.password}"
          p:initialSize="${datasource.activity.initialSize}"
          p:minIdle="${datasource.activity.minIdle}"
          p:maxActive="${datasource.activity.maxActive}"
          p:maxWait="${datasource.activity.maxWait}"
          p:timeBetweenEvictionRunsMillis="${datasource.activity.timeBetweenEvictionRunsMillis}"
          p:minEvictableIdleTimeMillis="${datasource.activity.minEvictableIdleTimeMillis}"
          p:validationQuery="${datasource.activity.validationQuery}"
          p:testWhileIdle="${datasource.activity.testWhileIdle}"
          p:testOnBorrow="${datasource.activity.testOnBorrow}"
          p:testOnReturn="${datasource.activity.testOnReturn}"
          p:poolPreparedStatements="${datasource.activity.poolPreparedStatements}"
          p:maxPoolPreparedStatementPerConnectionSize="${datasource.activity.maxPoolPreparedStatementPerConnectionSize}"
          p:connectionProperties="config.decrypt=true;config.decrypt.key=${datasource.activity.publickey}"
          p:filters="${datasource.activity.filters}">
    </bean>

    <bean id="userSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="userDataSource" />
        <property name="typeAliasesPackage"
                  value="com.gupaoedu.vip.activity.dal.entitys" />
        <property name="mapperLocations" value="classpath*:com/softwore/zgd/activity/dal/persistence/*Mapper.xml" />
    </bean>

    <bean name="userMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="com.gupaoedu.vip.activity.dal.persistence" />
        <property name="sqlSessionFactory" ref="userSqlSessionFactory" />
    </bean>

    <import resource="classpath*:META-INF/client/user-reference.xml"/>

    <context:component-scan base-package="com.softwore.zgd.activity.dal" />
    <context:component-scan base-package="com.softwore.zgd.activity.service" />

</beans>
